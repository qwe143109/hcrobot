
/**
\mainpage Arduino开发文档
\author <a href="http://sites.google.com/site/chaishushan/">柴树杉</a>[翻译] (chaishushan@gmail.com)
\note 该文档根据<a href="http://arduino.cc/">http://arduino.cc/</a>翻译，依照<a href="http://www.creativecommons.cn/licenses/by-nd-nc/1.0/">
创作公用约定</a>发布。文档的doxygen源文件可以从<a href="http://hcrobot.googlecode.com/svn/trunk/doc/arduino/">Arduino-doc</a>下载。
\note 该文档依托HCR开源项目.

<hr>
<h1>Arduinor入门向导</h2>

内容简介

<table  width='100%' border='0' cellpadding='5' cellspacing='0'>
<tr>

<td width='50%' valign='top'>
<h2>快速向导</h2>

该教程将告诉你如何使用Arduino, 如何配置Arduino的开发环境, 以及如何
上传你的程序到Arduino开发板中. 教程包含一下几个部分:

 - 简介: 它告诉你Arduino是什么, 有什么功能, 你可以用它做什么.
 - 如何配置开发环境, 包含一下操作系统:
   - Windows
   - Mac OS X
   - Linux
 - 如果你使用的是以下任一型号的开发板, 也有专门的入门教程:
   - Arduino Nano
   - Arduino Mini
   - Arduino BT
   - LilyPad Arduino
   - Arduino Pro
   - Arduino Pro Mini
   - Xbee shield
 - 常见问题解答.
 - 软件开发环境.
</td>

<td width='50%' valign='top'>
<h2>本站其他资源</h2>

 - Arduino booklet: 计算机, 电子学, 及Arduino相关教程.
   
<h2>更多资源(友情网站)</h2>

 - Learn electronics using Arduino: a great multi-part tutorial with 
   tons of pictures, code, circuits, even video. Highly recommended.
 - TodBot's course guides Longer presentation-format documents introducing 
   Arduino from a Halloween hacking class taught by TodBot: class 1 
   (getting started), class 2 (input and sensors), class 3 (communication, 
   servos, and pwm), class 4 (piezo sound & sensors, arduino+processing, 
   stand-alone operation).
 - Wiring electronics reference: circuit diagrams for connecting a variety 
   of basic electronic components.
 - Schematics to circuits: from Wiring, a guide to transforming circuit 
   diagrams into physical circuits.
 - Tom Igoe's Physical Computing Site: lots of information on electronics, 
   microcontrollers, sensors, actuators, books, etc.

</td>

</tr>
</table>

<hr>
<h1>Arduino参考手册</h2>

<b>Arduino</b>开发语言提供全部的C语言特性和C++语言的部分特性. 通过链接到
<b>AVR的<a href="http://www.nongnu.org/avr-libc/">libc</a>库</b>, 
可以使用库中提供的函数. 具体的应用细节请参考相关文档.

<table  width='100%' border='0' cellpadding='5' cellspacing='0'>
<tr>

<td width='50%' valign='top'>
<h2>程序结构</h2>

在Arduino中, 标准的程序入口main函数在内部被定义, 用户只需要关心以下两个函数:

 - void setup()
 - void loop()

setup() 函数用于初始化, loop() 函数用于执行. 初始化函数一般放在程序开头,
用于设置一些引脚的输出/输入模式, 初始化串口通讯等类似工作.  loop() 函数中
的代码将被循环执行, 例如: 读入引脚状态, 设置引脚输出状态等.

<h3>控制流程</h3>

 - \ref If
 - \ref IfElse
 - \ref For
 - \ref Switch
 - \ref While
 - \ref DoWhile
 - \ref Break
 - \ref Continue
 - \ref Return
 
<h3>相关语法</h3>

 - \ref SemiColon
 - \ref Braces
 - <a href="Comments.html"> <b>// (单行注释)</b></a>
 - <a href="Comments.html"> <b>/<em>* *</em>/ (多行注释)</b></a>
 - <a href="Define.html"> <b><em>#</em>define</b></a>
 - <a href="Include.html"> <b><em>#</em>include</b></a>
 
<h3> 算术运算符 </h3>

 - \ref Assignment
 - <a href="Arithmetic.html"> <b>+ (加)</b></a>
 - <a href="Arithmetic.html"> <b>- (减)</b></a>
 - <a href="Arithmetic.html"> <b>* (乘)</b></a>
 - <a href="Arithmetic.html"> <b>/ (除)</b></a>
 - \ref Modulo
 
<h3>比较运算符</h3>
 
 - <a href="If.html"> <b>== (equal to)</b></a>
 - <a href="If.html"> <b>!= (not equal to)</b></a>
 - <a href="If.html"> <b>< (less than)</b></a>
 - <a href="If.html"> <b>> (greater than)</b></a>
 - <a href="If.html"> <b><= (less than or equal to)</b></a>
 - <a href="If.html"> <b>>= (greater than or equal to)</b></a>

<h3>布尔运算符</h3> 

 - <a href="Boolean.html"> <b>&& (and)</b></a>
 - <a href="Boolean.html"> <b>|| (or)</b></a>
 - <a href="Boolean.html"> <b>! (not)</b></a>
 
<h3>指针运算符</h3>

 - <a href="Pointer.html"> <b>* dereference operator</b></a>
 - <a href="Pointer.html"> <b>& reference operator</b></a>

<h3>位运算</h3>

 - <a href="BitwiseAnd.html"> <b>& (bitwise and)</b></a>
 - <a href="BitwiseAnd.html"> <b>| (bitwise or)</b></a>
 - <a href="BitwiseAnd.html"> <b>^ (bitwise xor)</b></a>
 - <a href="BitwiseXorNot.html"> <b>~ (bitwise not)</b></a>
 - <a href="Bitshift.html"> <b><< (bitshift left)</b></a>
 - <a href="Bitshift.html"> <b>>> (bitshift right)</b></a>
 
 - Port Manipulation

<h3>复合运算符</h3>

 - <a href="Increment.html"> <b>++ (increment)</b></a>
 - <a href="Increment.html"> <b>-- (decrement)</b></a>
 - <a href="IncrementCompound.html"> <b>+= (compound addition)</b></a>
 - <a href="IncrementCompound.html"> <b>-= (compound subtraction)</b></a>
 - <a href="IncrementCompound.html"> <b>*= (compound multiplication)</b></a>
 - <a href="IncrementCompound.html"> <b>/= (compound division)</b></a>

<h2>变量</h2>

<h3>常量</h3>

 - <a href="Constants.html"> <b>HIGH | LOW</b></a>
 - <a href="Constants.html"> <b>INPUT | OUTPUT</b></a>
 - <a href="Constants.html"> <b>true | false</b></a>
 - <a href="IntegerConstants.html"> <b>integer constants</b></a>
 - <a href="Fpconstants.html"> <b>floating point constants</b></a>
 
 - #HIGH | #LOW
 
<h3>数据类型</h3>

 - \ref DataTypes "void keyword"
 - \ref DataTypes "boolean"
 - \ref DataTypes "char"
 - \ref DataTypes "unsigned char"
 - \ref DataTypes "byte"
 - \ref DataTypes "int"
 - \ref DataTypes "unsigned int"
 - \ref DataTypes "long"
 - \ref DataTypes "unsigned long"
 - \ref DataTypes "float"
 - \ref DataTypes "double"
 - \ref DataTypes "string"
 - \ref DataTypes "array"

<h3> 变量作用域&修饰符 </h3>

 - \ref VariableScopeQualifiers "variable scope"
 - \ref VariableScopeQualifiers "static"
 - \ref VariableScopeQualifiers "volatile"
 - \ref VariableScopeQualifiers "const"
 - \ref VariableScopeQualifiers "PROGMEM"

<h3>辅助工具</h3>

 - \ref Utilities "cast" (cast operator)
 - \ref Utilities "sizeof()" (sizeof operator)

</td>

<td width='50%' valign='top'>
<h2>基本函数</h2>

<h3>数字I/O</h3>

 - \ref pinMode "pinMode(pin, mode)"
 - \ref digitalWrite "digitalWrite(pin, value)"
 - \ref digitalRead "digitalRead(pin)"

<h3>模拟I/O</h3>

 - \ref analogReference "analogReference(type)"
 - \ref analogRead "analogRead(pin)"
 - \ref analogWrite "analogWrite(pin, value)" - PWM

<h3>高级I/O</h3>

 - \ref shiftOut "shiftOut(dataPin, clockPin, bitOrder, val)"
 - \ref pulseIn "pulseIn(pin, state, timeout)"

<h3>时间</h3>

 - \ref millis "millis()"
 - \ref delay "delay(ms)"
 - \ref delayMicroseconds "delayMicroseconds(us)"

<h3>数学库</h3>

 - min(x, y)
 - max(x, y)
 - abs(x)
 - constrain(x, a, b)
 - \ref map "map(x, in_min, in_max, out_min, out_max)"
 - \ref lib_libc "pow(base, exponent)"
 - \ref lib_libc "sqrt(x)"

<h3>三角函数</h3>

 - \ref lib_libc "sin(rad)"
 - \ref lib_libc "cos(rad)"
 - \ref lib_libc "tan(rad)"

<h3>随机数</h3>

 - \ref randomSeed "randomSeed(seed)"
 - \ref random(long) "random(howbig)"
 - \ref random(long,long) "random(howsmall, howbig)"

<h3>设置中断</h3>

 - \ref attachInterrupt "attachInterrupt(interrupt, function, mode)"
 - \ref detachInterrupt "detachInterrupt(interrupt)"

<h3>中断</h3>

 - interrupts()
 - noInterrupts()

<h3>串口通讯</h3>

 - \ref HardwareSerial::begin "Serial.begin(speed)"
 - \ref HardwareSerial::available "Serial.available()"
 - \ref HardwareSerial::read "Serial.read()"
 - \ref HardwareSerial::flush "Serial.flush()"
 - \ref HardwareSerial::print "Serial.print(data)"
 - \ref HardwareSerial::println "Serial.println(uint8_t data)"
</td>

</tr>
</table>

*/

