/**
\file wiring.h

\def HIGH 
\brief 高电平
\def LOW
\brief 低电平

\def INPUT
\brief 输入
\def OUTPUT
\brief 输出

\def true
\brief 真
\def false
\brief 假

\def PI
\brief PI
\def HALF_PI
\brief 二分之一PI
\def TWO_PI
\brief 二倍PI

\def DEG_TO_RAD
\brief 弧度转角度
\def RAD_TO_DEG
\brief 角度转弧度

\def SERIAL
\brief 待完善
\def DISPLAY
\brief 待完善
\def LSBFIRST
\brief 待完善
\def MSBFIRST
\brief 待完善
\def CHANGE
\brief 待完善
\def FALLING
\brief 待完善
\def RISING
\brief 待完善
\def INTERNAL
\brief 待完善
\def DEFAULT
\brief 待完善
\def EXTERNAL
\brief 待完善

\def min(a, b) ((a)<(b)?(a):(b))
\brief 最小值
\def max(a, b) ((a)>(b)?(a):(b))
\brief 最大值
\def abs(x) ((x)>0?(x):-(x))
\brief 绝对值

\def constrain(amt,low,high)
\brief 是否在区间
\def round(x) ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))
\brief 四舍五入
\def radians(deg) ((deg)*DEG_TO_RAD)
\brief 角度转弧度
\def degrees(rad) ((rad)*RAD_TO_DEG)
\brief 弧度转角度

\def sq(x) ((x)*(x))
\brief 平方

\def interrupts()
\brief 开中断
\def noInterrupts()
\brief 关中断

\def clockCyclesPerMicrosecond()   ( F_CPU / 1000000L )
\brief 没毫秒时钟周期
\def clockCyclesToMicroseconds(a)   ( (a) / clockCyclesPerMicrosecond() )
\brief 时钟周期转毫秒
\def microsecondsToClockCycles(a)   ( (a) * clockCyclesPerMicrosecond() )
\brief 毫秒转时钟周期

\def bitRead(value, bit)  (((value) >> (bit)) & 0x01)
\brief 读一个bit
\def bitSet(value, bit)   ((value) |= (1UL << (bit)))
\brief 设置一个bit
\def bitClear(value, bit) ((value) &= ~(1UL << (bit)))
\brief 清空一个bit
\def bitWrite(value, bit, bitvalue)   (bitvalue ? bitSet(value, bit) : bitClear(value, bit))
\brief 写一个bit
\def bit(b)   (1 << (b))
\brief 生成相应bit

\def lowByte(w)
\brief 低字节
\def highByte(w)
\brief 高字节
*/

/**
\typedef unsigned int 	word
\brief 字(2字节)
*/

/**
\typedef  uint8_t 	boolean
\brief 布尔(1字节)
*/

/**
\typedef uint8_t 	byte
\brief 字节
*/


/**
\fn void init(void);
\brief 待完善
\fn void pinMode(uint8_t, uint8_t);
\brief 待完善
\fn void digitalWrite(uint8_t, uint8_t);
\brief 待完善
\fn int digitalRead(uint8_t);
\brief 待完善
\fn int analogRead(uint8_t);
\brief 待完善
\fn void analogReference(uint8_t mode);
\brief 待完善
\fn void analogWrite(uint8_t, int);
\brief 待完善

\fn void beginSerial(long);
\brief 待完善
\fn void serialWrite(unsigned char);
\brief 待完善
\fn int serialAvailable(void);
\brief 待完善
\fn int serialRead(void);
\brief 待完善
\fn void serialFlush(void);
\brief 待完善

\fn unsigned long millis(void);
\brief 待完善
\fn unsigned long micros(void);
\brief 待完善
\fn void delay(unsigned long);
\brief 待完善
\fn void delayMicroseconds(unsigned int us);
\brief 待完善
\fn unsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);
\brief 待完善

\fn void shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, byte val);
\brief 待完善

\fn void attachInterrupt(uint8_t, void (*)(void), int mode);
\brief 待完善
\fn void detachInterrupt(uint8_t);
\brief 待完善

\fn void setup(void)
\brief 初始化
\fn void loop(void)
\brief 主体程序
*/
